name: PHP Composer and Codesniffer

on: pull_request

jobs:
  sniff:
    runs-on: ${{ matrix.operating-system }}
    strategy:
      matrix:
        operating-system: [ ubuntu-latest ]
        php-versions: [ '7.4' ]
    env:
      cache_version: 0 # increment to flush all caches
      php_extensions: tokenizer, xmlwriter, simplexml
    steps:
      - uses: actions/checkout@v2

      - name: Add GitHub oAuth
        env:
          TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: composer config --global github-oauth.github.com $TOKEN

      - name: Detect File Changes
        uses: dorny/paths-filter@v2
        id: filter
        with:
          list-files: shell
          filters: |
            pluginsrc:
              - added|modified: 'src/**/*.php'

      - name: Setup PHP extension cache
        if: ${{ steps.filter.outputs.pluginsrc == 'true' }}
        id: cache-php-extensions
        uses: shivammathur/cache-extensions@v1
        with:
          php-version: ${{ matrix.php-versions }}
          extensions: ${{ env.php_extensions }}
          key: ${{ matrix.operating-system }}-${{ env.cache_version }}-phpextensions-${{ matrix.php-versions }}

      - name: Cache PHP extensions
        if: ${{ steps.filter.outputs.pluginsrc == 'true' }}
        uses: actions/cache@v1
        with:
          path: ${{ steps.cache-php-extensions.outputs.dir }}
          key: ${{ steps.cache-php-extensions.outputs.key }}
          restore-keys: ${{ steps.cache-php-extensions.outputs.key }}

      - name: Set up PHP
        if: ${{ steps.filter.outputs.pluginsrc == 'true' }}
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
          extensions: ${{ env.php_extensions }}
          coverage: none
        env:
          COMPOSER_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Validate composer.json and composer.lock
        if: ${{ steps.filter.outputs.pluginsrc == 'true' }}
        run: composer validate

      - name: Get composer cache directory
        if: ${{ steps.filter.outputs.pluginsrc == 'true' }}
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Check for Cached Composer Dependencies
        if: ${{ steps.filter.outputs.pluginsrc == 'true' }}
        id: cache-composer-dependencies
        uses: actions/cache@v1
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-${{ env.cache_version }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-${{ env.cache_version }}-composer-

      - name: Install composer dependencies
        if: ${{ steps.filter.outputs.pluginsrc == 'true' }}
        run: |
          echo "${{ secrets.COMPOSER_ENV }}" > .env
          composer install --prefer-dist --no-progress --no-suggest --optimize-autoloader

      - name: PHPCS
        if: ${{ steps.filter.outputs.pluginsrc == 'true' }}
        run: ./vendor/bin/phpcs --standard=./phpcs.xml.dist ${{ steps.filter.outputs.pluginsrc_files }}
